import telebot
from telebot import types
import requests
import sqlite3
import time
import calendar
import datetime
from datetime import datetime as dt
import pytz
import traceback
from bs4 import BeautifulSoup
from fake_useragent import UserAgent
from config import *
from heroes import *

bot = telebot.TeleBot(token, threaded=False)
ua = UserAgent()

enemy_team = list()

connect = sqlite3.connect('users.db')  # —Å–æ–∑–¥–∞–Ω–∏–µ –¥–±
cursor = connect.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS all_messages(
    user_id INTEGER,
    nickname TEXT,
    activity_date TEXT,
    request TEXT,
    bot_answer TEXT,
    execution_time INTEGER
)""")
cursor.execute("""CREATE TABLE IF NOT EXISTS users(
        user_id INTEGER,
        nickname TEXT,
        messages INTEGER,
        first_activity TEXT,
        last_activity TEXT
    )""")
cursor.execute("""CREATE TABLE IF NOT EXISTS errors(
        user_id INTEGER,
        nickname TEXT,
        request TEXT,
        bot_answer TEXT,
        error TEXT
    )""")


def change_quantity_of_messages(message):
    con = sqlite3.connect("users.db")
    cur = con.cursor()
    cur.execute(f"SELECT messages FROM users WHERE user_id = {message.chat.id}")
    messages = cur.fetchone()[0]
    messages += 1
    con.commit()
    cur.execute(f"UPDATE users SET messages = {messages} WHERE user_id = {message.chat.id}")
    con.commit()


def date(message):
    con = sqlite3.connect("users.db")
    cur = con.cursor()
    cur.execute(f"SELECT first_activity FROM users WHERE user_id = {message.chat.id}")
    first_activity = cur.fetchone()[0].split()
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É—é —Å—Ç—Ä–æ–∫—É –≤ –æ–±—ä–µ–∫—Ç datetime
    date_obj = dt.strptime(first_activity[0], '%Y-%m-%d')
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É—é –¥–∞—Ç—É –≤ —Å–ª–æ–≤–µ—Å–Ω—ã–π –≤–∏–¥
    cur.execute(f"SELECT messages FROM users WHERE user_id = {message.chat.id}")
    messages = cur.fetchone()[0]
    months_rus = {
        1: '—è–Ω–≤–∞—Ä—è',
        2: '—Ñ–µ–≤—Ä–∞–ª—è',
        3: '–º–∞—Ä—Ç–∞',
        4: '–∞–ø—Ä–µ–ª—è',
        5: '–º–∞—è',
        6: '–∏—é–Ω—è',
        7: '–∏—é–ª—è',
        8: '–∞–≤–≥—É—Å—Ç–∞',
        9: '—Å–µ–Ω—Ç—è–±—Ä—è',
        10: '–æ–∫—Ç—è–±—Ä—è',
        11: '–Ω–æ—è–±—Ä—è',
        12: '–¥–µ–∫–∞–±—Ä—è'
    }
    output_date = "{} {} {} –≥–æ–¥–∞".format(date_obj.day, months_rus[date_obj.month], date_obj.year)
    con.commit()
    result = f"–í—ã –≤–ø–µ—Ä–≤—ã–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –±–æ—Ç–æ–º {output_date}. –ó–∞ –≤—Å—ë –≤—Ä–µ–º—è –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ {messages} —Å–æ–æ–±—â–µ–Ω–∏–π üí¨."
    return result


@bot.message_handler(commands=['start', 'help', 'info', 'disadvantage', "allmes"])
def manual(message):
    start_time = time.time()
    bot_answer = None
    if message.text.lower() == '/start':
        bot_answer = "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤—ã–±–æ—Ä–∞ –ª—É—á—à–∏—Ö –≥–µ—Ä–æ–µ–≤ –ø—Ä–æ—Ç–∏–≤ –ø–∏–∫–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≥–µ—Ä–æ–µ–≤ –≤—Ä–∞–∂–µ—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –í—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å dotabuff. –ù–µ –≤–∞–∂–Ω–æ —Å–∫–æ–ª—å–∫–æ –≥–µ—Ä–æ–µ–≤ –≤–≤–µ—Å—Ç–∏, –±–æ—Ç –≤—ã–≤–µ–¥–µ—Ç –ª—É—á—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø—Ä–æ—Ç–∏–≤ –Ω–∏—Ö.\n –ü—Ä–∏–º–µ—Ä:rubick, axe, pl, –∫—Ä–∏—Å—Ç–∞–ª–∫–∞"
        bot.send_message(message.chat.id, bot_answer, reply_markup=userpanel())
        con = sqlite3.connect("users.db")
        cur = con.cursor()
        cur.execute(f'SELECT user_id from users')
        users_in_db = cur.fetchall()
        if (message.chat.id,) not in users_in_db:
            cur.execute("INSERT INTO users(user_id,nickname,messages,first_activity,last_activity)"
                        f"VALUES ({message.chat.id},\"{message.from_user.username}\",{0},\"{datetime.datetime.now(pytz.timezone('Europe/Moscow'))}\",\"{datetime.datetime.now(pytz.timezone('Europe/Moscow'))}\")")

            con.commit()
    elif message.text.lower() == '/help':
        bot_answer = "–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤—ã–±–æ—Ä–∞ –ª—É—á—à–∏—Ö –≥–µ—Ä–æ–µ–≤ –ø—Ä–æ—Ç–∏–≤ –ø–∏–∫–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≥–µ—Ä–æ–µ–≤ –≤—Ä–∞–∂–µ—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ü–∏—Å–∞—Ç—å –Ω—É–∂–Ω–æ –±–µ–∑ –Ω–∏–∫–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã, –º–æ–∂–Ω–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è–º–∏, –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∏–º–µ–Ω–∞–º–∏ –≥–µ—Ä–æ–µ–≤, –ª—é–±–æ–π —Ä–µ–≥–∏—Å—Ç—Ä. –í—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å dotabuff. –ù–µ –≤–∞–∂–Ω–æ —Å–∫–æ–ª—å–∫–æ –≥–µ—Ä–æ–µ–≤ –≤–≤–µ—Å—Ç–∏, –±–æ—Ç –≤—ã–≤–µ–¥–µ—Ç –ª—É—á—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø—Ä–æ—Ç–∏–≤ –Ω–∏—Ö.\n –ü—Ä–∏–º–µ—Ä:rubick, axe, pl, –∫—Ä–∏—Å—Ç–∞–ª–∫–∞\n\n–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ - @madness_nl"
        bot.send_message(message.chat.id, bot_answer, reply_markup=userpanel())
    elif message.text.lower() == '/info':
        bot_answer = "–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤—ã–±–æ—Ä–∞ –ª—É—á—à–∏—Ö –≥–µ—Ä–æ–µ–≤ –ø—Ä–æ—Ç–∏–≤ –ø–∏–∫–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≥–µ—Ä–æ–µ–≤ –≤—Ä–∞–∂–µ—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –í—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å dotabuff. –ù–µ –≤–∞–∂–Ω–æ —Å–∫–æ–ª—å–∫–æ –≥–µ—Ä–æ–µ–≤ –≤–≤–µ—Å—Ç–∏, –±–æ—Ç –≤—ã–≤–µ–¥–µ—Ç –ª—É—á—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø—Ä–æ—Ç–∏–≤ –Ω–∏—Ö.\n –ü—Ä–∏–º–µ—Ä:rubick, axe, pl, –∫—Ä–∏—Å—Ç–∞–ª–∫–∞"
        bot.send_message(message.chat.id, bot_answer, reply_markup=userpanel())
    elif message.text.lower() == '/disadvantage':
        bot_answer = '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –∏–∑–º–µ—Ä—è–µ—Ç—Å—è —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º –¥–≤—É—Ö –≥–µ—Ä–æ–µ–≤, –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º –æ—Ç –∏—Ö –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π –¥–æ–ª–∏ –ø–æ–±–µ–¥. –û–Ω–æ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø—É—Ç–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤–æ–µ–π –¥–æ–ª–∏ –ø–æ–±–µ–¥ –∫–∞–∫ "–≤", —Ç–∞–∫ –∏ "–∑–∞" –ø—Ä–µ–¥–µ–ª–∞–º–∏ –º–∞—Ç—á–∞ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—è —Ä–∞–∑–Ω–∏—Ü—É —Å –±–∞–∑–æ–≤–æ–π –¥–æ–ª–µ–π –ø–æ–±–µ–¥.'
        bot.send_message(message.chat.id, bot_answer, reply_markup=userpanel())
    elif message.text.split()[0] == '/allmes' and message.chat.id == admin:
        try:
            # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
            connect = sqlite3.connect('users.db')
            cursor = connect.cursor()

            # –í—ã–±—Ä–∞—Ç—å —Å—Ç–æ–ª–±–µ—Ü user_id –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
            cursor.execute("SELECT user_id FROM users")

            # –ò–∑–≤–ª–µ—á—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
            user_ids = cursor.fetchall()

            # –ó–∞–∫—Ä—ã—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
            cursor.close()
            connect.close()

            # –°–¥–µ–ª–∞—Ç—å —Ü–∏–∫–ª –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –≤ —Å–ø–∏—Å–∫–µ user_ids
            mes = " ".join(message.text.split()[1:])
            for user_id in user_ids:
                bot.send_message(user_id[0], mes)
        except:
            pass


    end_time = time.time()
    execution_time = end_time - start_time
    database(message, bot_answer, execution_time)


    con = sqlite3.connect("users.db")
    cur = con.cursor()
    cur.execute(
        f"UPDATE users SET last_activity = \"{datetime.datetime.now(pytz.timezone('Europe/Moscow'))}\" WHERE user_id = {message.chat.id}")
    con.commit()

    change_quantity_of_messages(message)

    con = sqlite3.connect("users.db")
    cur = con.cursor()
    cur.execute(f"UPDATE users SET nickname = \"{message.from_user.username}\" WHERE user_id = {message.chat.id}")
    con.commit()

    con = sqlite3.connect("users.db")
    cur = con.cursor()
    cur.execute(
        f"UPDATE users SET last_activity = \"{datetime.datetime.now(pytz.timezone('Europe/Moscow'))}\" WHERE user_id = {message.chat.id}")
    con.commit()



last_i = None  # –¥–ª—è —Ü–∏–∫–ª–∞ –Ω–∏–∂–µ
pos_1 = dict()
pos_2 = dict()
pos_3 = dict()
pos_4 = dict()
pos_5 = dict()

result_pos_1 = list()
result_pos_2 = list()
result_pos_3 = list()
result_pos_4 = list()
result_pos_5 = list()


def restart():
    global allheroes, enemy_team, result_list, last_i, pos_1, pos_2, pos_3, pos_4, pos_5, result_pos_1, result_pos_2, result_pos_3, result_pos_4, result_pos_5
    allheroes = allheroes_reset.copy()
    enemy_team.clear()
    last_i = None
    pos_1.clear()
    pos_2.clear()
    pos_3.clear()
    pos_4.clear()
    pos_5.clear()
    result_pos_1.clear()
    result_pos_2.clear()
    result_pos_3.clear()
    result_pos_4.clear()
    result_pos_5.clear()


def database(message, bot_answer, execution_time):
    user_id = message.chat.id
    nickname = message.from_user.username
    request = message.text
    current_date_time = datetime.datetime.now().isoformat()
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute(
        "INSERT INTO all_messages(user_id, nickname, activity_date, request, bot_answer, execution_time) VALUES(?,?,?,?,?,?);",
        (user_id, nickname, current_date_time, request, bot_answer, execution_time))
    connect.commit()


@bot.message_handler(content_types=['text'])
def main(message):
    if message.text == b_2:
        bot.send_message(message.chat.id, date(message))
        change_quantity_of_messages(message)
    elif message.text == b_4:
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –≥–µ—Ä–æ–µ–≤ üëá", reply_markup=b_1_inline)
        change_quantity_of_messages(message)
    elif message.text == b_3:
        r = requests.get("https://www.dotabuff.com/heroes/winning?date=week",
                         headers={
                             'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'})  # —Å—Å—ã–ª–∫–∞ + —á—Ç–æ–±—ã –Ω–∞ –¥–æ—Ç–∞–±–∞—Ñ—Ñ –∑–∞—Ö–æ–¥–∏–ª–æ
        soup = BeautifulSoup(r.content, "lxml")  # –Ω–µ —Ç—Ä–æ–≥–∞–π
        best_heroes = soup.find("tbody", class_="[&_tr:last-child]:tw-border-0").find_all("tr")
        best_winrate_heroes = list()
        for i in range(15):
            best_winrate_heroes.append(
                f"{best_heroes[i].find_all('td')[0].text.strip()} {best_heroes[i].find_all('td')[1].text.strip()}")
        best_winrate_heroes = '\n'.join(best_winrate_heroes)
        bot.send_message(message.chat.id, f"–ì–µ—Ä–æ–∏ —Å —Å–∞–º—ã–º –±–æ–ª—å—à–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–º –ø–æ–±–µ–¥ –∑–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é üìä:\n\n{best_winrate_heroes}")

    elif message.text == b_5:
        bot_answer = "–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤—ã–±–æ—Ä–∞ –ª—É—á—à–∏—Ö –≥–µ—Ä–æ–µ–≤ –ø—Ä–æ—Ç–∏–≤ –ø–∏–∫–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≥–µ—Ä–æ–µ–≤ –≤—Ä–∞–∂–µ—Å–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ü–∏—Å–∞—Ç—å –Ω—É–∂–Ω–æ –±–µ–∑ –Ω–∏–∫–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã, –º–æ–∂–Ω–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è–º–∏, –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∏–º–µ–Ω–∞–º–∏ –≥–µ—Ä–æ–µ–≤, –ª—é–±–æ–π —Ä–µ–≥–∏—Å—Ç—Ä. –í—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å dotabuff. –ù–µ –≤–∞–∂–Ω–æ —Å–∫–æ–ª—å–∫–æ –≥–µ—Ä–æ–µ–≤ –≤–≤–µ—Å—Ç–∏, –±–æ—Ç –≤—ã–≤–µ–¥–µ—Ç –ª—É—á—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø—Ä–æ—Ç–∏–≤ –Ω–∏—Ö.\n –ü—Ä–∏–º–µ—Ä:rubick, axe, pl, –∫—Ä–∏—Å—Ç–∞–ª–∫–∞\n\n–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ - @madness_nl"
        bot.send_message(message.chat.id, bot_answer, reply_markup=userpanel())
    else:
        try:
            start_time = time.time()
            restart()
            enemy_team = message.text.lower().split(",")
            enemy_team = set(enemy_team)
            try:
                enemy_team.remove(",")
            except:
                pass
            try:
                enemy_team.remove(".")
            except:
                pass
            try:
                enemy_team.remove("")
            except:
                pass
            enemy_team = list(enemy_team)
            print(enemy_team)
            for i in enemy_team:
                enemy_team[enemy_team.index(i)] = i.lstrip()
                i = i.lstrip()
                if i[-1] == "," or i[-1] == ".":
                    enemy_team[enemy_team.index(i)] = i[:-1]
                    i = i[:-1]
                hero_for_except = i
                for key, j in dota_heroes.items():
                    if i in j:
                        enemy_team[enemy_team.index(i)] = key
                        i = key
                        break
                print(i)
                r = requests.get('https://ru.dotabuff.com/heroes/' + i + '/counters',
                                 headers={
                                     'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'})  # —Å—Å—ã–ª–∫–∞ + —á—Ç–æ–±—ã –Ω–∞ –¥–æ—Ç–∞–±–∞—Ñ—Ñ –∑–∞—Ö–æ–¥–∏–ª–æ
                soup = BeautifulSoup(r.content, "lxml")  # –Ω–µ —Ç—Ä–æ–≥–∞–π
                bad_hero = soup.find("table", class_="sortable").find("tbody").find_all("tr")
                for q in bad_hero:
                    disadvantage = q.find_all("td")[2].text.replace('%', "")  # –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—Å—Ç–≤–æ + —É–±–∏—Ä–∞—é % –∏–∑ –∑–Ω–∞—á–µ–Ω–∏—è
                    allheroes[q.find_all("td")[1].text.strip()] += float(
                        disadvantage)  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—Å—Ç–≤–∞ –≤ allheroes

            for i in enemy_team:  # —É–¥–∞–ª–µ–Ω–∏–µ –≥–µ—Ä–æ–µ–≤ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏–∑ allheroes
                r_2 = requests.get('https://ru.dotabuff.com/heroes/' + i,
                                   headers={
                                       'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'})
                soup_2 = BeautifulSoup(r_2.content, "lxml")
                hero = soup_2.find("div", class_="header-content-title").find("h1").find(
                    "small").previous_element.text.strip()
                del allheroes[hero]

            for i in allheroes.keys():  # –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ —á–∏—Å–µ–ª
                allheroes[i] = round(allheroes[i], 2)

            allheroes_sorted = sorted(allheroes.items(), key=lambda item: item[1],
                                      reverse=True)  # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é
            for i, j in allheroes_sorted:
                if len(pos_1) == 10 and len(pos_2) == 10 and len(pos_3) == 10 and len(pos_4) == 10 and len(pos_5) == 10:
                    break
                if len(pos_1) < 10 and i in safelane:
                    pos_1[i] = j
                if len(pos_2) < 10 and i in midlane:
                    pos_2[i] = j
                if len(pos_3) < 10 and i in offlane:
                    pos_3[i] = j
                if len(pos_4) < 10 and i in hard_support:
                    pos_4[i] = j
                if len(pos_5) < 10 and i in safe_support:
                    pos_5[i] = j

            result = f'–õ—É—á—à–∏–µ –≥–µ—Ä–æ–∏ –ø—Ä–æ—Ç–∏–≤ {", ".join(sorted(enemy_team))}: \n\n–õ—É—á—à–∏–µ –∫–µ—Ä—Ä–∏ (pos 1): \n'
            for i, j in pos_1.items():
                result_dotabuff = i + " : " + str(j)
                result_pos_1.append(result_dotabuff)
            result += "\n".join(result_pos_1)
            result += "\n\n–õ—É—á—à–∏–µ –º–∏–¥–µ—Ä—ã (pos 2): \n"
            for i, j in pos_2.items():
                result_dotabuff = i + " : " + str(j)
                result_pos_2.append(result_dotabuff)
            result += "\n".join(result_pos_2)
            result += "\n\n–õ—É—á—à–∏–µ –æ—Ñ—Ñ–ª–µ–π–Ω–µ—Ä—ã (pos 3): \n"
            for i, j in pos_3.items():
                result_dotabuff = i + " : " + str(j)
                result_pos_3.append(result_dotabuff)
            result += "\n".join(result_pos_3)
            result += "\n\n–õ—É—á—à–∏–µ —Ö–∞—Ä–¥ —Å–∞–ø–æ—Ä—Ç—ã (pos 4): \n"
            for i, j in pos_4.items():
                result_dotabuff = i + " : " + str(j)
                result_pos_4.append(result_dotabuff)
            result += "\n".join(result_pos_4)
            result += "\n\n–õ—É—á—à–∏–µ –≥–µ—Ä–æ–∏ –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (pos 5): \n"
            for i, j in pos_5.items():
                result_dotabuff = i + " : " + str(j)
                result_pos_5.append(result_dotabuff)
            result += "\n".join(result_pos_5)
            bot_answer = result
            bot.send_message(message.chat.id, bot_answer, reply_markup=userpanel())  # –≤—ã–≤–æ–¥
        except:
            restart()
            bot_answer = f"–û—à–∏–±–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –≥–µ—Ä–æ–µ–≤. –ü–∏—à–∏—Ç–µ –≥–µ—Ä–æ–µ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. /help\n–ü—Ä–∏–º–µ—Ä:rubick, axe, pl, –∫—Ä–∏—Å—Ç–∞–ª–∫–∞\n\n–û—à–∏–±–∫–∞ –≤ —Å–ª–æ–≤–µ: {hero_for_except}"
            bot.reply_to(message, bot_answer, reply_markup=b_1_inline)

            con = sqlite3.connect("users.db")
            cur = con.cursor()

            user_id = message.chat.id
            nickname = message.from_user.username
            request = message.text.lower()
            error = traceback.format_exc()

            cur.execute("INSERT INTO errors(user_id,nickname,request,bot_answer,error) VALUES(?,?,?,?,?);",
                        (user_id, nickname, request, bot_answer, error))

            con.commit()

        end_time = time.time()
        execution_time = end_time - start_time
        database(message, bot_answer, execution_time)

        con = sqlite3.connect("users.db")
        cur = con.cursor()
        cur.execute(
            f"UPDATE users SET last_activity = \"{datetime.datetime.now(pytz.timezone('Europe/Moscow'))}\" WHERE user_id = {message.chat.id}")
        con.commit()

        change_quantity_of_messages(message)

        con = sqlite3.connect("users.db")
        cur = con.cursor()
        cur.execute(f"UPDATE users SET nickname = \"{message.from_user.username}\" WHERE user_id = {message.chat.id}")
        con.commit()


bot.polling(none_stop=True)
